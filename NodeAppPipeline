pipeline {
    agent any
    environment {
        NODEJS_VERSION = '19' // Change the version as needed
        NVM_DIR = "${HOME}/.nvm"
        NVM_SH = "${NVM_DIR}/nvm.sh"
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Install Dependencies') {
            steps {
                script {
                    def npmCMD = 'npm'
                    def nodeCMD = 'node'
                    // Use Node Version Manager (nvm) to manage Node.js versions
                    if (isUnix()) {
                        // Install nvm
                        sh 'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash'
                        sh 'export NVM_DIR="$HOME/.nvm"'
                        sh '[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"'

                        // Install Node.js
                        sh "nvm install ${NODEJS_VERSION}"
                        sh "nvm use ${NODEJS_VERSION}"
                        // sh "nvm use ${NODEJS_VERSION}"

                        // Set the npm and node commands to use the installed versions
                        npmCMD = "${NVM_BIN}/npm"
                        nodeCMD = "${NVM_BIN}/node"
                    } else {
                        // For Windows, you might need to adjust the installation process
                        // Refer to nvm documentation for Windows: https://github.com/nvm-sh/nvm#windows
                    }
                    // Install Node.js dependencies
                    sh "${npmCMD} install"
                }
            }
        }
                    stage('Update nvm') {
            steps {
                script {
                    // Update nvm using Git
                    dir(NVM_DIR) {
                        sh 'git pull origin master' // You may need to change the branch name if it's different
                    }

                    // Set NVM_DIR and source nvm.sh directly
                    env.PATH = "${NVM_DIR}:${env.PATH}"
                    sh "source ${NVM_SH}"

                    // Install or use the desired Node.js version
                    sh "nvm install ${NODEJS_VERSION}"
                    sh "nvm use ${NODEJS_VERSION}"

                    // Set the npm and node commands to use the installed versions
                    def npmCMD = "${NVM_BIN}/npm"
                    def nodeCMD = "${NVM_BIN}/node"
                    
                    // Install Node.js dependencies
                    sh "${npmCMD} install"
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    // Run your Node.js tests
                    sh "${npmCMD} test"
                }
            }
        }
}
}
